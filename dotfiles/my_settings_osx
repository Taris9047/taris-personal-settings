#!/bin/sh

# Default Homebrew Path
HBREW_PATH=$HOME/.local

# Default texlive base path
texlive_base_path=$HOME/.texlive

# Aliases Added for my convenience
alias ls='ls -pFhG'
alias ll='ls -la'
alias l='ls -CF'
alias rm='rm -i'
alias mv='mv -i'
alias cp='cp -i'
alias grep='grep --color'
alias df='df -h'
alias ps='ps -W'
alias sudo='sudo -H'

# Delete certain files recursively!!
delete_recursive ()
{
  echo "Querying files!!"
  echo "================================"
  if [ -x "$(command -v fd)" ]; then
    fd -IH -g "$1" -tf
  else
    find . -name "$1" -type f
  fi
  echo "================================"
  read -p "Do you wish to delete them? [yn]" yn
  while true; do
    case $yn in
      [Yy]* )
        if [ -x "$(command -v fd)" ]; then
          if [ -x "$(command -v rip)"]; then
            fd -IH -g "$1" -tf -X rip
          else
            fd -IH -g "$1" -tf -X rm
          fi
        else
          find . -name "$1" -type f -delete
        fi
        echo "Deleted the files!!"
        ;;
	  [Nn]* )
	    echo "Not deleting!!"; break
	    ;;
	  * )
	    echo "Please answer y or n."
	    ;;
    esac
  done
}

# Get Linux distro. info.
ARCH=$(uname -m)
KERNEL=$(uname -r)
if [ -n "$(command -v lsb_release)" ]; then
    DISTRONAME=$(lsb_release -s -d)
elif [ -f "/etc/os-release" ]; then
    DISTRONAME=$(grep PRETTY_NAME /etc/os-release | sed 's/PRETTY_NAME=//g' | tr -d '="')
elif [ -f "/etc/debian_version" ]; then
    DISTRONAME="Debian $(cat /etc/debian_version)"
elif [ -f "/etc/redhat-release" ]; then
    DISTRONAME=$(cat /etc/redhat-release)
else
    DISTRONAME="$(uname -s) $(uname -r)"
fi

# The homebrew path!!
if [ -d $HBREW_PATH ]; then
  export HOMEBREW=$HBREW_PATH
  echo "HOMEBREW directory is $HOMEBREW"
  export PATH=$HOMEBREW/bin:$HOMEBREW/opt/bin:/opt/bin/:$PATH
fi

# Rust
if [ -d $HOME/.cargo ]; then
	echo "Cargo directory detected at $HOME/.cargo"
	# export PATH=$HOME/.cargo/bin:$PATH
	source $HOME/.cargo/env
fi

# Exa
if [ -x "$(command -v exa)" ]; then
	echo "exa found! using it instead of ls"
	alias ls='exa -hF'
	alias ll='exa -lahF'
	alias l='exa -hF'
fi

# Lsd
if [ -x "$(command -v lsd)" ]; then
	echo "lsd found! using it instead of ls or exa"
	alias ls='lsd -hFX'
	alias ll='lsd -lahFX'
	alias l='lsd -hFX'
fi

# Bat
if [ -x "$(command -v bat)" ]; then
	echo "Bat found! using it instead of cat"
	alias cat='bat'
fi

# Neovim
if [ -x "$(command -v nvim)" ]; then
	echo "Neovim found! replacing vim!"
	alias vim="nvim"
	alias vi="nvim"
fi

# Texlive
# texlive_year="2020"
# texlive_arch=x86_64-linux
# texlive_bin_dir=$texlive_base_path/$texlive_year/bin/$texlive_arch/
# texlive_bin_dir_woyear=$texlive_base_path/bin/$texlive_arch/
# if [ -d $texlive_bin_dir ]; then
#     echo "Texlive found at $texlive_bin_dir directory!! Adding to path!"
#     export PATH=$texlive_bin_dir:$PATH
# elif [ -d $texlive_bin_dir_woyear ]; then
# 	echo "Texlive found at $texlive_bin_dir_woyear directory!! Adding to path!"
# 	export PATH=$texlive_bin_dir_woyear:$PATH
# fi

# Rip
trash_location="$HOME/.local/share/Trash/files/"
if [ -x "$(command -v rip)" ]; then
	echo "rip, rm-improved found! Setting up graveyard at $trash_location"
	alias rip="rip --graveyard $trash_location"
fi

# bpytop
if [ -x "$(command -v $HOMEBREW/bin/pip3)" ]; then
  if [ -x "$(command -v $HOMEBREW/bin/bpytop)" ]; then
    echo "Locally installed bpytop found!"
	alias bpytop="$HOMEBREW/bin/pip3 install -U bpytop && bpytop"
  fi
fi

# pypy
if [ -x "$(command -v $HOMEBREW/opt/pypy/bin/pypy3)" ]; then
  echo "pypy3 found in $HOMEBREW/opt/pypy/bin/pypy3 !! Extending PATH!"
  export PATH=$HOMEBREW/opt/pypy/bin:$PATH
fi

# Enabling Starship
[ -x "$(command -v starship)" ] && [ ! -f "$HOME/.oh-my-zsh/oh-my-zsh.sh" ] && eval "$(starship init zsh)"

